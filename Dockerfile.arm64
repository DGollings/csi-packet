## build the go binary

FROM golang:1.12.6 as build

ARG pkgpath=/go/src/github.com/packethost/csi-packet/
ENV GO111MODULE=on
RUN mkdir -p $pkgpath
WORKDIR $pkgpath
# separate steps to avoid cache busting
COPY go.mod go.sum $pkgpath
RUN go mod download
COPY . $pkgpath
RUN make build install DESTDIR=/dist ARCH=arm64

## get qemu

FROM alpine:3.8 as qemu

ARG QEMU_VERSION=2.9.1-1
ARG QEMU_ARCHS="aarch64"

# Enable non-native runs on amd64 architecture hosts
RUN apk --update add curl
RUN for i in ${QEMU_ARCHS}; do curl -L https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz | tar zxvf - -C /usr/bin; done
RUN chmod +x /usr/bin/qemu-*

## build iscsi
FROM arm64v8/gcc:9.2.0 as iscsi-build
# Enable non-native builds of this image on an amd64 hosts.
# This must before any RUN command in this image!
# we only need this for the intermediate "base" image, so we can run all the apk and other commands
# and this is only because of using older kernels
# when running on a kernel >= 4.8, this will become less relevant
# as of this writing, our CI, travis, is running 4.4
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/

ARG BINARY=packet-cloud-storage-interface
ARG ARCH=arm64

RUN apt update && apt install -y libkmod-dev libsystemd-dev
RUN mkdir /src

WORKDIR /src
RUN git clone https://github.com/open-iscsi/open-isns.git
WORKDIR /src/open-isns
# need to get most recent version of automake
RUN git checkout cfdbcff867ee580a71bc9c18c3a38a6057df0150 && cp $(ls -1tRd /usr/share/automake-* | head -1)/config.* aclocal/ && ./configure && make && make install install_hdrs install_lib

WORKDIR /src
RUN git clone https://github.com/open-iscsi/open-iscsi.git
WORKDIR /src/open-iscsi
# install to a fresh tree under /dist
RUN mkdir /dist && git checkout 288add22d6b61cc68ede358faeec9affb15019cd && make && make install DESTDIR=/dist

FROM arm64v8/ubuntu:18.04
# Enable non-native builds of this image on an amd64 hosts.
# This must before any RUN command in this image!
# we only need this for the intermediate "base" image, so we can run all the apk and other commands
# and this is only because of using older kernels
# when running on a kernel >= 4.8, this will become less relevant
# as of this writing, our CI, travis, is running 4.4
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/

ARG BINARY=packet-cloud-storage-interface
ARG ARCH=arm64

RUN apt-get update
RUN apt-get install -y wget multipath-tools open-iscsi curl jq

# now install latest open-iscsi, ensuring it is *after* the apt install is done
COPY --from=iscsi-build /dist/usr/lib/ /lib
COPY --from=iscsi-build /dist/sbin/ /sbin

COPY --from=build /dist/${BINARY}-${ARCH} ${BINARY}

RUN rm /usr/bin/qemu-aarch64-static

ENTRYPOINT ["/packet-cloud-storage-interface"]
